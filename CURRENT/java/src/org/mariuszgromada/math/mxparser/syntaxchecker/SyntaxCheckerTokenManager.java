/* SyntaxCheckerTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. SyntaxCheckerTokenManager.java */
package org.mariuszgromada.math.mxparser.syntaxchecker;

/** Token Manager. */
public class SyntaxCheckerTokenManager implements SyntaxCheckerConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x800000000000L) != 0L)
         {
            jjmatchedKind = 123;
            return 53;
         }
         if ((active1 & 0x400000000000L) != 0L)
            return 225;
         if ((active1 & 0x20000000L) != 0L)
            return 243;
         if ((active1 & 0x5000040000000L) != 0L)
            return 244;
         if ((active1 & 0x2a030000000000L) != 0L)
            return 17;
         if ((active1 & 0x100000000L) != 0L)
            return 30;
         if ((active1 & 0x1000000000L) != 0L)
            return 19;
         return -1;
      case 1:
         if ((active1 & 0x1000000000000L) != 0L)
         {
            jjmatchedKind = 128;
            jjmatchedPos = 1;
            return -1;
         }
         return -1;
      case 2:
         if ((active1 & 0x1000000000000L) != 0L)
         {
            if (jjmatchedPos < 1)
            {
               jjmatchedKind = 128;
               jjmatchedPos = 1;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1, long active2){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1, active2), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 33:
         return jjStartNfaWithStates_0(0, 100, 19);
      case 35:
         return jjStopAtPos(0, 99);
      case 37:
         return jjStopAtPos(0, 101);
      case 40:
         jjmatchedKind = 89;
         return jjMoveStringLiteralDfa1_0(0x100000000000000L);
      case 41:
         return jjStopAtPos(0, 90);
      case 42:
         return jjStopAtPos(0, 95);
      case 43:
         return jjStartNfaWithStates_0(0, 93, 243);
      case 44:
         return jjStopAtPos(0, 91);
      case 45:
         jjmatchedKind = 94;
         return jjMoveStringLiteralDfa1_0(0x5000000000000L);
      case 47:
         return jjStartNfaWithStates_0(0, 96, 30);
      case 59:
         return jjStopAtPos(0, 92);
      case 60:
         jjmatchedKind = 104;
         return jjMoveStringLiteralDfa1_0(0x2a020000000000L);
      case 62:
         jjmatchedKind = 106;
         return jjMoveStringLiteralDfa1_0(0x80000000000L);
      case 64:
         return jjMoveStringLiteralDfa1_0(0x800000000000L);
      case 91:
         jjmatchedKind = 126;
         return jjMoveStringLiteralDfa1_0(0x3000000000000000L);
      case 93:
         return jjStopAtPos(0, 127);
      case 94:
         jjmatchedKind = 97;
         return jjMoveStringLiteralDfa1_0(0x400000000L);
      case 126:
         return jjStartNfaWithStates_0(0, 110, 225);
      default :
         return jjMoveNfa_0(5, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, 0L, active1, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 37:
         return jjMoveStringLiteralDfa2_0(active1, 0x3000000000000000L);
      case 43:
         return jjMoveStringLiteralDfa2_0(active1, 0x100000000000000L);
      case 45:
         return jjMoveStringLiteralDfa2_0(active1, 0x23000000000000L);
      case 47:
         return jjMoveStringLiteralDfa2_0(active1, 0xc000000000000L);
      case 61:
         if ((active1 & 0x20000000000L) != 0L)
            return jjStopAtPos(1, 105);
         else if ((active1 & 0x80000000000L) != 0L)
            return jjStopAtPos(1, 107);
         break;
      case 94:
         if ((active1 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 98);
         break;
      case 126:
         if ((active1 & 0x800000000000L) != 0L)
            return jjStopAtPos(1, 111);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, 0L, active1, 0L);
}
private int jjMoveStringLiteralDfa2_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(0, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, 0L, active1, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 37:
         return jjMoveStringLiteralDfa3_0(active1, 0x2000000000000000L);
      case 41:
         if ((active1 & 0x100000000000000L) != 0L)
            return jjStopAtPos(2, 120);
         break;
      case 45:
         if ((active1 & 0x2000000000000L) != 0L)
            return jjStopAtPos(2, 113);
         else if ((active1 & 0x8000000000000L) != 0L)
            return jjStopAtPos(2, 115);
         break;
      case 62:
         if ((active1 & 0x1000000000000L) != 0L)
            return jjStopAtPos(2, 112);
         else if ((active1 & 0x4000000000000L) != 0L)
            return jjStopAtPos(2, 114);
         else if ((active1 & 0x20000000000000L) != 0L)
            return jjStopAtPos(2, 117);
         break;
      case 93:
         if ((active1 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(2, 124);
         break;
      default :
         break;
   }
   return jjStartNfa_0(1, 0L, active1, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_0(1, 0L, old1, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, 0L, active1, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 93:
         if ((active1 & 0x2000000000000000L) != 0L)
            return jjStopAtPos(3, 125);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, 0L, active1, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 243;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 48)
                        kind = 48;
                     { jjCheckNAddStates(0, 7); }
                  }
                  else if ((0x8c00c09800000000L & l) != 0L)
                  {
                     if (kind > 123)
                        kind = 123;
                  }
                  else if (curChar == 45)
                     { jjCheckNAddStates(8, 11); }
                  else if (curChar == 43)
                     { jjCheckNAddStates(12, 15); }
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 28;
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 19;
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 15;
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 30;
                  else if (curChar == 38)
                  {
                     if (kind > 109)
                        kind = 109;
                  }
                  else if (curChar == 61)
                  {
                     if (kind > 102)
                        kind = 102;
                  }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 243:
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(40, 41); }
                  else if (curChar == 45)
                  {
                     if (kind > 128)
                        kind = 128;
                  }
                  else if (curChar == 43)
                  {
                     if (kind > 128)
                        kind = 128;
                  }
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(38, 39); }
                  break;
               case 53:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 58;
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 56;
                  else if (curChar == 38)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  break;
               case 244:
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(44, 39); }
                  else if (curChar == 43)
                  {
                     if (kind > 128)
                        kind = 128;
                  }
                  else if (curChar == 45)
                  {
                     if (kind > 128)
                        kind = 128;
                  }
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(43, 41); }
                  break;
               case 225:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 228;
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 226;
                  else if (curChar == 61)
                  {
                     if (kind > 103)
                        kind = 103;
                  }
                  if (curChar == 38)
                  {
                     if (kind > 116)
                        kind = 116;
                  }
                  break;
               case 0:
                  if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 3:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(4); }
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  { jjCheckNAdd(4); }
                  break;
               case 6:
                  if (curChar == 46)
                     { jjCheckNAdd(7); }
                  break;
               case 7:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 85)
                     kind = 85;
                  { jjCheckNAdd(7); }
                  break;
               case 9:
                  if (curChar == 46)
                     { jjCheckNAdd(10); }
                  break;
               case 10:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 86)
                     kind = 86;
                  { jjCheckNAdd(10); }
                  break;
               case 12:
                  if (curChar == 46)
                     { jjCheckNAdd(13); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  { jjCheckNAdd(13); }
                  break;
               case 14:
               case 15:
                  if (curChar == 61 && kind > 102)
                     kind = 102;
                  break;
               case 16:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 62 && kind > 103)
                     kind = 103;
                  break;
               case 18:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 61 && kind > 103)
                     kind = 103;
                  break;
               case 20:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 25:
                  if (curChar == 47 && kind > 108)
                     kind = 108;
                  break;
               case 27:
               case 28:
                  if (curChar == 38 && kind > 109)
                     kind = 109;
                  break;
               case 29:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 31:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 121)
                     kind = 121;
                  { jjAddStates(16, 17); }
                  break;
               case 36:
                  if ((0x8c00c09800000000L & l) != 0L && kind > 123)
                     kind = 123;
                  break;
               case 37:
                  if (curChar == 43)
                     { jjCheckNAddStates(12, 15); }
                  break;
               case 38:
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(38, 39); }
                  break;
               case 39:
                  if (curChar == 43 && kind > 128)
                     kind = 128;
                  break;
               case 40:
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(40, 41); }
                  break;
               case 41:
                  if (curChar == 45 && kind > 128)
                     kind = 128;
                  break;
               case 42:
                  if (curChar == 45)
                     { jjCheckNAddStates(8, 11); }
                  break;
               case 43:
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(43, 41); }
                  break;
               case 44:
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(44, 39); }
                  break;
               case 46:
                  if (curChar == 43 && kind > 122)
                     kind = 122;
                  break;
               case 49:
                  if (curChar == 45 && kind > 122)
                     kind = 122;
                  break;
               case 56:
                  if (curChar == 60 && kind > 119)
                     kind = 119;
                  break;
               case 57:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 62 && kind > 119)
                     kind = 119;
                  break;
               case 59:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 61:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 62:
                  if (curChar != 46)
                     break;
                  if (kind > 49)
                     kind = 49;
                  { jjCheckNAdd(63); }
                  break;
               case 63:
                  if (curChar != 49)
                     break;
                  if (kind > 49)
                     kind = 49;
                  { jjCheckNAdd(63); }
                  break;
               case 64:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 65:
                  if (curChar == 46)
                     { jjCheckNAdd(66); }
                  break;
               case 66:
                  if ((0x3000000000000L & l) == 0L)
                     break;
                  if (kind > 50)
                     kind = 50;
                  { jjCheckNAdd(66); }
                  break;
               case 67:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 68:
                  if (curChar == 46)
                     { jjCheckNAdd(69); }
                  break;
               case 69:
                  if ((0x7000000000000L & l) == 0L)
                     break;
                  if (kind > 51)
                     kind = 51;
                  { jjCheckNAdd(69); }
                  break;
               case 70:
                  if (curChar == 52)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if (curChar == 46)
                     { jjCheckNAdd(72); }
                  break;
               case 72:
                  if ((0xf000000000000L & l) == 0L)
                     break;
                  if (kind > 52)
                     kind = 52;
                  { jjCheckNAdd(72); }
                  break;
               case 73:
                  if (curChar == 53)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 74:
                  if (curChar == 46)
                     { jjCheckNAdd(75); }
                  break;
               case 75:
                  if ((0x1f000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  { jjCheckNAdd(75); }
                  break;
               case 76:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 77:
                  if (curChar == 46)
                     { jjCheckNAdd(78); }
                  break;
               case 78:
                  if ((0x3f000000000000L & l) == 0L)
                     break;
                  if (kind > 54)
                     kind = 54;
                  { jjCheckNAdd(78); }
                  break;
               case 79:
                  if (curChar == 55)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 80:
                  if (curChar == 46)
                     { jjCheckNAdd(81); }
                  break;
               case 81:
                  if ((0x7f000000000000L & l) == 0L)
                     break;
                  if (kind > 55)
                     kind = 55;
                  { jjCheckNAdd(81); }
                  break;
               case 82:
                  if (curChar == 56)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 83:
                  if (curChar == 46)
                     { jjCheckNAdd(84); }
                  break;
               case 84:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 56)
                     kind = 56;
                  { jjCheckNAdd(84); }
                  break;
               case 85:
                  if (curChar == 57)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 86:
                  if (curChar == 46)
                     { jjCheckNAdd(87); }
                  break;
               case 87:
                  if ((0x1ff000000000000L & l) == 0L)
                     break;
                  if (kind > 57)
                     kind = 57;
                  { jjCheckNAdd(87); }
                  break;
               case 88:
                  if (curChar == 48)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 89:
                  if (curChar == 46)
                     { jjCheckNAdd(90); }
                  break;
               case 90:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 58)
                     kind = 58;
                  { jjCheckNAdd(90); }
                  break;
               case 91:
               case 197:
                  if (curChar == 49)
                     { jjCheckNAdd(88); }
                  break;
               case 92:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if (curChar == 46)
                     { jjCheckNAdd(94); }
                  break;
               case 94:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  { jjCheckNAdd(94); }
                  break;
               case 95:
               case 198:
                  if (curChar == 49)
                     { jjCheckNAdd(92); }
                  break;
               case 96:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 97:
                  if (curChar == 46)
                     { jjCheckNAdd(98); }
                  break;
               case 98:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  { jjCheckNAdd(98); }
                  break;
               case 99:
               case 199:
                  if (curChar == 49)
                     { jjCheckNAdd(96); }
                  break;
               case 100:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if (curChar == 46)
                     { jjCheckNAdd(102); }
                  break;
               case 102:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  { jjCheckNAdd(102); }
                  break;
               case 103:
               case 200:
                  if (curChar == 49)
                     { jjCheckNAdd(100); }
                  break;
               case 104:
                  if (curChar == 52)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 105:
                  if (curChar == 46)
                     { jjCheckNAdd(106); }
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  { jjCheckNAdd(106); }
                  break;
               case 107:
               case 201:
                  if (curChar == 49)
                     { jjCheckNAdd(104); }
                  break;
               case 108:
                  if (curChar == 53)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 109:
                  if (curChar == 46)
                     { jjCheckNAdd(110); }
                  break;
               case 110:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  { jjCheckNAdd(110); }
                  break;
               case 111:
               case 202:
                  if (curChar == 49)
                     { jjCheckNAdd(108); }
                  break;
               case 112:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 113:
                  if (curChar == 46)
                     { jjCheckNAdd(114); }
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  { jjCheckNAdd(114); }
                  break;
               case 115:
               case 203:
                  if (curChar == 49)
                     { jjCheckNAdd(112); }
                  break;
               case 116:
                  if (curChar == 55)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 117:
                  if (curChar == 46)
                     { jjCheckNAdd(118); }
                  break;
               case 118:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAdd(118); }
                  break;
               case 119:
               case 204:
                  if (curChar == 49)
                     { jjCheckNAdd(116); }
                  break;
               case 120:
                  if (curChar == 56)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 121:
                  if (curChar == 46)
                     { jjCheckNAdd(122); }
                  break;
               case 122:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAdd(122); }
                  break;
               case 123:
               case 205:
                  if (curChar == 49)
                     { jjCheckNAdd(120); }
                  break;
               case 124:
                  if (curChar == 57)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 125:
                  if (curChar == 46)
                     { jjCheckNAdd(126); }
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  { jjCheckNAdd(126); }
                  break;
               case 127:
               case 206:
                  if (curChar == 49)
                     { jjCheckNAdd(124); }
                  break;
               case 128:
                  if (curChar == 48)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 129:
                  if (curChar == 46)
                     { jjCheckNAdd(130); }
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  { jjCheckNAdd(130); }
                  break;
               case 131:
               case 207:
                  if (curChar == 50)
                     { jjCheckNAdd(128); }
                  break;
               case 132:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 133:
                  if (curChar == 46)
                     { jjCheckNAdd(134); }
                  break;
               case 134:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  { jjCheckNAdd(134); }
                  break;
               case 135:
               case 208:
                  if (curChar == 50)
                     { jjCheckNAdd(132); }
                  break;
               case 136:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 137:
                  if (curChar == 46)
                     { jjCheckNAdd(138); }
                  break;
               case 138:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  { jjCheckNAdd(138); }
                  break;
               case 139:
               case 209:
                  if (curChar == 50)
                     { jjCheckNAdd(136); }
                  break;
               case 140:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 141:
                  if (curChar == 46)
                     { jjCheckNAdd(142); }
                  break;
               case 142:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  { jjCheckNAdd(142); }
                  break;
               case 143:
               case 210:
                  if (curChar == 50)
                     { jjCheckNAdd(140); }
                  break;
               case 144:
                  if (curChar == 52)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 145:
                  if (curChar == 46)
                     { jjCheckNAdd(146); }
                  break;
               case 146:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  { jjCheckNAdd(146); }
                  break;
               case 147:
               case 211:
                  if (curChar == 50)
                     { jjCheckNAdd(144); }
                  break;
               case 148:
                  if (curChar == 53)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 149:
                  if (curChar == 46)
                     { jjCheckNAdd(150); }
                  break;
               case 150:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  { jjCheckNAdd(150); }
                  break;
               case 151:
               case 212:
                  if (curChar == 50)
                     { jjCheckNAdd(148); }
                  break;
               case 152:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 153:
                  if (curChar == 46)
                     { jjCheckNAdd(154); }
                  break;
               case 154:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  { jjCheckNAdd(154); }
                  break;
               case 155:
               case 213:
                  if (curChar == 50)
                     { jjCheckNAdd(152); }
                  break;
               case 156:
                  if (curChar == 55)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 157:
                  if (curChar == 46)
                     { jjCheckNAdd(158); }
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  { jjCheckNAdd(158); }
                  break;
               case 159:
               case 214:
                  if (curChar == 50)
                     { jjCheckNAdd(156); }
                  break;
               case 160:
                  if (curChar == 56)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 161:
                  if (curChar == 46)
                     { jjCheckNAdd(162); }
                  break;
               case 162:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjCheckNAdd(162); }
                  break;
               case 163:
               case 215:
                  if (curChar == 50)
                     { jjCheckNAdd(160); }
                  break;
               case 164:
                  if (curChar == 57)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 165:
                  if (curChar == 46)
                     { jjCheckNAdd(166); }
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  { jjCheckNAdd(166); }
                  break;
               case 167:
               case 216:
                  if (curChar == 50)
                     { jjCheckNAdd(164); }
                  break;
               case 168:
                  if (curChar == 48)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 169:
                  if (curChar == 46)
                     { jjCheckNAdd(170); }
                  break;
               case 170:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  { jjCheckNAdd(170); }
                  break;
               case 171:
               case 217:
                  if (curChar == 51)
                     { jjCheckNAdd(168); }
                  break;
               case 172:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 173:
                  if (curChar == 46)
                     { jjCheckNAdd(174); }
                  break;
               case 174:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 79)
                     kind = 79;
                  { jjCheckNAdd(174); }
                  break;
               case 175:
               case 218:
                  if (curChar == 51)
                     { jjCheckNAdd(172); }
                  break;
               case 176:
                  if (curChar == 50)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 177:
                  if (curChar == 46)
                     { jjCheckNAdd(178); }
                  break;
               case 178:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAdd(178); }
                  break;
               case 179:
               case 219:
                  if (curChar == 51)
                     { jjCheckNAdd(176); }
                  break;
               case 180:
                  if (curChar == 51)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 181:
                  if (curChar == 46)
                     { jjCheckNAdd(182); }
                  break;
               case 182:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  { jjCheckNAdd(182); }
                  break;
               case 183:
               case 220:
                  if (curChar == 51)
                     { jjCheckNAdd(180); }
                  break;
               case 184:
                  if (curChar == 52)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 185:
                  if (curChar == 46)
                     { jjCheckNAdd(186); }
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  { jjCheckNAdd(186); }
                  break;
               case 187:
               case 221:
                  if (curChar == 51)
                     { jjCheckNAdd(184); }
                  break;
               case 188:
                  if (curChar == 53)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 189:
                  if (curChar == 46)
                     { jjCheckNAdd(190); }
                  break;
               case 190:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  { jjCheckNAdd(190); }
                  break;
               case 191:
               case 222:
                  if (curChar == 51)
                     { jjCheckNAdd(188); }
                  break;
               case 192:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 193:
                  if (curChar == 46)
                     { jjCheckNAdd(194); }
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  { jjCheckNAdd(194); }
                  break;
               case 195:
               case 223:
                  if (curChar == 51)
                     { jjCheckNAdd(192); }
                  break;
               case 226:
                  if (curChar == 38 && kind > 116)
                     kind = 116;
                  break;
               case 227:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 229:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 233:
                  if (curChar == 47 && kind > 118)
                     kind = 118;
                  break;
               case 235:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  { jjCheckNAddStates(0, 7); }
                  break;
               case 236:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(236, 0); }
                  break;
               case 237:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  { jjCheckNAddTwoStates(237, 2); }
                  break;
               case 238:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(238, 239); }
                  break;
               case 240:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(240, 241); }
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 88)
                     kind = 88;
                  jjstateSet[jjnewStateCnt++] = 242;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 121)
                        kind = 121;
                     { jjCheckNAddTwoStates(33, 35); }
                  }
                  else if ((0x110000001L & l) != 0L)
                  {
                     if (kind > 123)
                        kind = 123;
                  }
                  else if (curChar == 126)
                     { jjAddStates(18, 23); }
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 23;
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  else if ((0x400000004L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  else if (curChar == 64)
                     { jjAddStates(24, 28); }
                  else if (curChar == 100)
                     { jjAddStates(29, 30); }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 124)
                  {
                     if (kind > 108)
                        kind = 108;
                  }
                  else if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 19;
                  if (curChar == 66)
                     { jjCheckNAddStates(31, 66); }
                  else if (curChar == 98)
                     { jjCheckNAddStates(67, 102); }
                  break;
               case 53:
                  if (curChar == 124)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  else if (curChar == 94)
                  {
                     if (kind > 119)
                        kind = 119;
                  }
                  break;
               case 225:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 233;
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 231;
                  if (curChar == 124)
                  {
                     if (kind > 118)
                        kind = 118;
                  }
                  break;
               case 2:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(103, 104); }
                  break;
               case 8:
                  if ((0x800000008000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if ((0x10000000100L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 13:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 87)
                     kind = 87;
                  jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 21:
                  if (curChar == 126)
                     jjstateSet[jjnewStateCnt++] = 19;
                  break;
               case 22:
               case 23:
                  if (curChar == 124 && kind > 108)
                     kind = 108;
                  break;
               case 24:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 26:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 30:
                  if (curChar == 92 && kind > 109)
                     kind = 109;
                  break;
               case 32:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 121)
                     kind = 121;
                  { jjCheckNAddTwoStates(33, 35); }
                  break;
               case 34:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 121)
                     kind = 121;
                  { jjCheckNAddTwoStates(33, 34); }
                  break;
               case 35:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 121)
                     kind = 121;
                  { jjCheckNAddStates(105, 107); }
                  break;
               case 36:
                  if ((0x110000001L & l) != 0L && kind > 123)
                     kind = 123;
                  break;
               case 45:
                  if (curChar == 100)
                     { jjAddStates(29, 30); }
                  break;
               case 47:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 50:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 64)
                     { jjAddStates(24, 28); }
                  break;
               case 54:
                  if (curChar == 94)
                     kind = 119;
                  break;
               case 55:
                  if (curChar == 124 && kind > 119)
                     kind = 119;
                  break;
               case 60:
                  if (curChar == 98)
                     { jjCheckNAddStates(67, 102); }
                  break;
               case 94:
                  if ((0x200000002L & l) == 0L)
                     break;
                  if (kind > 59)
                     kind = 59;
                  jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 98:
                  if ((0x600000006L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 102:
                  if ((0xe0000000eL & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 106:
                  if ((0x1e0000001eL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 110:
                  if ((0x3e0000003eL & l) == 0L)
                     break;
                  if (kind > 63)
                     kind = 63;
                  jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 114:
                  if ((0x7e0000007eL & l) == 0L)
                     break;
                  if (kind > 64)
                     kind = 64;
                  jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 118:
                  if ((0xfe000000feL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 122:
                  if ((0x1fe000001feL & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 126:
                  if ((0x3fe000003feL & l) == 0L)
                     break;
                  if (kind > 67)
                     kind = 67;
                  jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 130:
                  if ((0x7fe000007feL & l) == 0L)
                     break;
                  if (kind > 68)
                     kind = 68;
                  jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 134:
                  if ((0xffe00000ffeL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 138:
                  if ((0x1ffe00001ffeL & l) == 0L)
                     break;
                  if (kind > 70)
                     kind = 70;
                  jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 142:
                  if ((0x3ffe00003ffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 146:
                  if ((0x7ffe00007ffeL & l) == 0L)
                     break;
                  if (kind > 72)
                     kind = 72;
                  jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 150:
                  if ((0xfffe0000fffeL & l) == 0L)
                     break;
                  if (kind > 73)
                     kind = 73;
                  jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 154:
                  if ((0x1fffe0001fffeL & l) == 0L)
                     break;
                  if (kind > 74)
                     kind = 74;
                  jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 158:
                  if ((0x3fffe0003fffeL & l) == 0L)
                     break;
                  if (kind > 75)
                     kind = 75;
                  jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 162:
                  if ((0x7fffe0007fffeL & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 166:
                  if ((0xffffe000ffffeL & l) == 0L)
                     break;
                  if (kind > 77)
                     kind = 77;
                  jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 170:
                  if ((0x1ffffe001ffffeL & l) == 0L)
                     break;
                  if (kind > 78)
                     kind = 78;
                  jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 174:
                  if ((0x3ffffe003ffffeL & l) == 0L)
                     break;
                  if (kind > 79)
                     kind = 79;
                  jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 178:
                  if ((0x7ffffe007ffffeL & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 182:
                  if ((0xfffffe00fffffeL & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 186:
                  if ((0x1fffffe01fffffeL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 190:
                  if ((0x3fffffe03fffffeL & l) == 0L)
                     break;
                  if (kind > 83)
                     kind = 83;
                  jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 194:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 84)
                     kind = 84;
                  jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 196:
                  if (curChar == 66)
                     { jjCheckNAddStates(31, 66); }
                  break;
               case 224:
                  if (curChar == 126)
                     { jjAddStates(18, 23); }
                  break;
               case 228:
                  if (curChar == 92 && kind > 116)
                     kind = 116;
                  break;
               case 230:
               case 231:
                  if (curChar == 124 && kind > 118)
                     kind = 118;
                  break;
               case 232:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 234:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 239:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 241:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 243 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, "\50", "\51", "\54", "\73", "\53", "\55", "\52", 
"\57", "\136", "\136\136", "\43", "\41", "\45", null, null, "\74", "\74\75", "\76", 
"\76\75", null, null, "\176", "\100\176", "\55\55\76", "\74\55\55", "\55\57\76", 
"\74\57\55", null, "\74\55\76", null, null, "\50\53\51", null, null, null, "\133\45\135", 
"\133\45\45\135", "\133", "\135", null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   236, 0, 237, 2, 238, 239, 240, 241, 43, 41, 44, 39, 38, 39, 40, 41, 
   34, 33, 225, 227, 229, 230, 232, 234, 53, 54, 55, 57, 59, 48, 51, 61, 
   64, 67, 70, 73, 76, 79, 82, 85, 197, 198, 199, 200, 201, 202, 203, 204, 
   205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 
   221, 222, 223, 61, 64, 67, 70, 73, 76, 79, 82, 85, 91, 95, 99, 103, 
   107, 111, 115, 119, 123, 127, 131, 135, 139, 143, 147, 151, 155, 159, 163, 167, 
   171, 175, 179, 183, 187, 191, 195, 3, 4, 33, 34, 35, 
};

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedPos == 0 && jjmatchedKind > 129)
   {
      jjmatchedKind = 129;
   }
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public SyntaxCheckerTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public SyntaxCheckerTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 243; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xffff000000000001L, 0xffffffffffffffffL, 0x3L, 
};
static final long[] jjtoSkip = {
   0x1eL, 0x0L, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x0L, 0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[243];
    private final int[] jjstateSet = new int[2 * 243];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
